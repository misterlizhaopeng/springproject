在装饰模式中的角色有：
　　抽象组件(Component)角色：给出一个抽象接口，规范被装饰的对象。
　　具体组件(ConcreteComponent)角色：定义一个被装饰的类，可以说是操作的主要对象；
　　装饰(DecoratorAction)角色：持有一个组件(Component)对象的实例，并定义一个与抽象组件接口一致的接口；
　　具体装饰(DecoratorActionA/DecoratorActionB 等等)角色：负责给组件对象“贴上”添加功能。

透明性：
    在模式中，对于消费者来说，被装饰类和装饰的功能类，中间的装饰者是透明的！
操作：
    对于装饰的功能，消费者可以自由的组装，使被装饰者实现不同的装饰；